---
- name: Init OS Version 2.0.0 Maintainer MrTshoot
  hosts: minimum-club
  become: yes
  tasks:

    - name: Add epel Repo
      yum:
        name: epel-release
        state: present

    - name: Upgrade All Packages
      yum: name=* state=latest

    - name: Add YUM Utils
      yum:
        name: yum-utils
        state: present

    - name: Install YUM Build Tools
      yum:
        name: "@Development tools"
        state: present

    - name: Install IUS CentOS7 Community
      yum:
        name: "https://centos7.iuscommunity.org/ius-release.rpm"
        state: present

    - name: Install Python3-6
      yum:
        name: python36u
        state: present

    - name: Install NTP
      yum:
        name: ntp
        state: present

    - name: Install expect
      yum:
        name: expect
        state: present

    - name: Install python36u-pip
      yum:
        name: python36u-pip
        state: present

    - name: Install python36u-devel
      yum:
        name: python36u-devel
        state: present

    - name: Install net-tools
      yum:
        name: net-tools
        state: present

    - name: Install VIM
      yum:
        name: vim
        state: present

    - name: Install WGET
      yum:
        name: wget
        state: present

    - name: Install htop
      yum:
        name: htop
        state: present

    - name: Install GIT
      yum:
        name: git
        state: present

    - name: Install Setools
      yum:
        name: setools
        state: present

    - name: Transfer NTP File
      copy: src=../files/{{ item }} dest=/etc/  mode=0777
      with_items:
        - "ntp.conf"

    - name: Transfer DNS Proxy File
      copy: src=../scripts/{{ item }} dest=/tmp/  mode=0777
      with_items:
        - "dns.sh"

    - name: Start DNS Proxy
      command: sh '/tmp/dns.sh'
    
    - name: Remove DNS Proxy File
      file: path=/tmp/dns.sh state=absent

    - name: Transfer Docker Install Scripts
      copy: src=../scripts/{{ item }} dest=/tmp/  mode=0777
      with_items:
        - "install_docker.sh"

    - name: Install Docker
      command: sh '/tmp/install_docker.sh'
    
    - name: Remove Docker Installation File
      file: path=/tmp/install_docker.sh state=absent

    - name: Transfer Docker Compose Installation File
      copy: src=../scripts/install_docker_compose.sh dest=/tmp mode=0777

    - name: Install Docker Compose
      command: sh '/tmp/install_docker_compose.sh'

    - name: Remove Docker Compose Installation File
      file: path=/tmp/install_docker_compose.sh state=absent

    - name: Transfer Resolver and Hosts
      copy: src=../files/{{ item }} dest=/etc/  mode=0777
      with_items:
        - "resolv.conf"
        - "hosts"
     
    - name: Add User MrTshoot
      user:
        name: mrtshoot
        state: present
        create_home: yes
        shell: /bin/bash
        update_password: on_create
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        append: yes

    - name: Add User Developer
      user:
        name: developer
        state: present
        create_home: yes
        shell: /bin/bash
        update_password: on_create
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        append: yes

    - name: Make Sudoers
      copy: src=../scripts/{{ item }} dest=/tmp/ mode=0777
      with_items:
        - "add_user_sudo.sh"

    - name: Install Sudoers
      command: sh '/tmp/add_user_sudo.sh'

    - name: Remove Sudoers File
      file: path=/tmp/add_user_sudo.sh state=absent

    - name: Set Up Authorized Keys for MrTshoot User
      authorized_key: user=mrtshoot key="{{item}}"
      with_file:
        - ../files/.ssh_keys_mrtshoot

    - name: Set Up Authorized Keys for Developer User
      authorized_key: user=developer key="{{item}}"
      with_file:
        - ../files/.ssh_keys_developer

    - name: Transfer SSH Configuration File
      copy: src=../files/{{ item }} dest=/etc/ssh/  mode=0777
      with_items:
        - "sshd_config"

    - name: Set SSH Banner
      copy: src=../files/banner.txt dest=/etc/ssh mode=0777

    - name: Syslog Configuration
      copy: src=../files/rsyslog.conf dest=/etc/ mode=0777

    - name: Add Firewall Rules
      firewalld:
        port: 80/tcp
        permanent: yes
        state: enabled

    - name: Firewalld reload
      command: firewall-cmd --reload

    - name: Transfer the Script Permission on Remote Host
      copy: src=../scripts/{{ item }} dest=/tmp/  mode=0777
      with_items:
        - "permission.sh"

    - name: Execute Script Permission
      command: sh '/tmp/permission.sh'

    - name: Transfer Selinux File
      copy: src=../scripts/selinux.sh dest=/tmp/ mode=0777

    - name: Change SeLinux Mode
      command: sh '/tmp/selinux.sh'

    - name: Remove Selinux File
      file: path=/tmp/selinux.sh state=absent

    - name: Remove Permission Script
      file: path=/tmp/permission.sh state=absent

    - name: Restart Service SSH Daemon
      service: name=sshd state=restarted

    - name: Restart Service Syslog Daemon
      service: name=rsyslog state=restarted

    - name: Restart Service NTP Daemon
      service: name=ntpd state=restarted

    - name: Restart Service Docker Daemon
      service: name=docker state=restarted

    - name: Restart Firewall Daemon
      service: name=firewalld state=restarted
